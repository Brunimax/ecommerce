
services:
  postgres:
    image: postgres:16-alpine
    container_name: ecommerce-db
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-net

  backend:
    build: ./backend
    container_name: ecommerce-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ecommerce
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8080:8080"
    networks:
      - ecommerce-net

  frontend:
    build: ./frontend
    container_name: ecommerce-frontend
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - ecommerce-net

volumes:
  pgdata:

networks:
  ecommerce-net:
    driver: bridge
